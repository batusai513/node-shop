type User {
  id: ID!
  name: String!
  email: String!
  createdAt: String!
  updatedAt: String!
  permissions: [Permission!]!
  cart: [CartItem]!
}

enum Permission {
  ADMIN
  USER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PERMISSIONUPDATE
}

input signupInput {
  name: String!
  email: String!
  password: String!
}

input signinInput {
  email: String!
  password: String!
}

input requestResetInput {
  email: String!
}

input resetPasswordInput {
  resetToken: String!
  password: String!
  confirmPassword: String!
}

input updateUserInput {
  name: String
  email: String
  permissions: [Permission]
}

extend type Query {
  users: [User]!
  me: User
}

extend type Mutation {
  signup(input: signupInput): User!
  signin(input: signinInput): User!
  signout: SuccessMessage!
  requestReset(input: requestResetInput): SuccessMessage!
  resetPassword(input: resetPasswordInput): User!
  updateUser(id: ID!, input: updateUserInput): User!
}
