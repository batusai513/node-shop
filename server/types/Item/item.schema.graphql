type Meta {
  count: Int!
}

type Item {
  id: ID!
  title: String
  description: String!
  image: String
  largeImage: String
  price: Float
  createdAt: String
  updatedAt: String
}

type ItemWithMeta {
  items: [Item!]!
  meta: Meta!
}

input getItemsInput {
  skip: Int
  first: Int
}

input createItemInput {
  title: String!
  description: String!
  image: String
  largeImage: String
  price: Float
}

input updateItemInput {
  title: String
  description: String
  image: String
  largeImage: String
  price: Float
}

extend type Query {
  getItems(input: getItemsInput): ItemWithMeta
  getItem(id: ID!): Item
  searchItems(searchTerm: String!): [Item]
}

extend type Mutation {
  createItem(input: createItemInput): Item
  updateItem(id: ID!, input: updateItemInput): Item
  removeItem(id: ID!): Item
}
